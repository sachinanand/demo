buildscript {
    ext {
        springBootVersion = '1.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: "jacoco"

if (project.hasProperty('prod')) {
    apply from: 'profile_prod.gradle'
} else if (project.hasProperty('fast')) {
    apply from: 'profile_fast.gradle'
} else {
    apply from: 'profile_dev.gradle'
}


war {
    baseName = 'demo'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

sourceSets {
    /*integrationTest {
        java {
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')

    }*/
    test {
        groovy {
            srcDir file('src/test/groovy')
        }
    }
}

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}


jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

dependencies {

    compile group: 'org.hibernate', name: 'hibernate-core', version: hibernate_entitymanager_version
    compile group: 'org.hibernate', name: 'hibernate-envers', version: hibernate_envers_version
    compile group: 'org.hibernate', name: 'hibernate-validator', version: hibernate_validator_version


    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile group: 'javax.inject', name: 'javax.inject', version: javax_inject_version
    compile('org.springframework.data:spring-data-commons:1.11.0.RELEASE')
    compile('org.codehaus.groovy:groovy')
    runtime('org.postgresql:postgresql')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'org.spockframework', name: 'spock-spring'
    testCompile group: 'com.h2database', name: 'h2'
    // needed for spock
    testCompile group: 'org.objenesis', name: 'objenesis', version: '1.4'
    testCompile group: 'cglib', name: 'cglib', version: '2.2'
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
